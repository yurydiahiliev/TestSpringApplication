plugins {
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'io.freefair.lombok' version '8.6'
    id 'com.google.cloud.tools.jib' version '3.4.1'
    id 'java'
}

ext {
    dockerImage = System.getProperty("os.arch") == "arm64" ? "arm64v8/eclipse-temurin:19-jre" : "eclipse-temurin:19-jre"
    dockerArch = System.getProperty("os.arch") == "arm64" ? "arm64" : "amd64"
    registry = 'yudyagilev'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.postgresql:postgresql'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0")

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

bootRun {
    systemProperties = System.properties
}

tasks.jar {
    manifest {
        attributes["Main-Class"] = "com.posts.TestApplication"
    }
}

jib {
    container {
        ports = ['8080']
        jvmFlags = ["-Dspring.profiles.active=docker"]
        creationTime = 'USE_CURRENT_TIMESTAMP'
    }
    from {
        image = "${project.ext.dockerImage}"
        platforms {
            platform {
                architecture = "${project.ext.dockerArch}"
                os = 'linux'
            }
        }
    }
    to {
        image = "${project.ext.registry}/${project.name}"
        tags = ['latest', "${project.version}"]
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

